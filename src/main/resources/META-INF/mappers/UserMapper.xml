<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.flat.head.dal.mappers.UserMapper">

    <resultMap id="UserMap" type="cn.com.flat.head.pojo.User">
        <id column="user_id" property="userId" />
        <result column="nick_name" property="nickName" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="pub_key" property="pubKey" />
        <result column="account_type" property="accountType" />
        <result column="role_id" property="roleId" />
        <result column="last_login_time" property="lastLoginTime" />
    </resultMap>
    <insert id="addUser">
        insert into sys_acl_user(user_id,nick_name, username, password, pub_key, account_type) values
            (#{userId},#{nickName}, #{username}, #{password}, #{pubKey}, #{accountType})
    </insert>
    <insert id="addUserRole">
        insert into sys_acl_user_role(user_id, role_id) values (#{userId}, #{roleId})
    </insert>
    <update id="updateUserRole">
        update sys_acl_user_role set role_id=#{roleId} where user_id=#{userId}
    </update>
    <update id="updateUser">
        update sys_acl_user set nick_name=#{nickName}
        <if test="password != '' and password != null">
            ,password=#{password}
        </if>
        where user_id=#{userId}
    </update>
    <update id="updateUserLoginTime">
        update sys_acl_user set last_login_time=now() where username=#{username}
    </update>

    <delete id="deleteUserById">
        delete from sys_acl_user where user_id = #{userId}
    </delete>
    <delete id="deleteUserRole">
        delete from sys_acl_user_role where user_id = #{userId}
    </delete>

    <select id="getUserByUsername" resultMap="UserMap">
        select * from sys_acl_user where username=#{username}
    </select>

    <select id="getUserRolesByUsername" resultType="java.lang.String">
        select acr.role_name from sys_acl_role acr, sys_acl_user acu , sys_acl_user_role aur where acr.role_id=aur.role_id and aur.user_id=acu.user_id and acu.username=#{username}
    </select>
    <select id="getUserTokensByUserId" resultType="java.lang.String">
        select distinct ap.perm_token from sys_acl_user_role acr, sys_acl_role_permission acp, sys_acl_permission ap where acr.user_id=#{userId}
                and acr.role_id=acp.role_id and acp.perm_id=ap.permission_id
    </select>
    <select id="getUserListPage" resultMap="UserMap">
        select * from sys_acl_user
    </select>
    <select id="getUserById" resultMap="UserMap">
        select acr.role_id, acu.user_id, acu.nick_name, acu.username from sys_acl_role acr, sys_acl_user acu , sys_acl_user_role aur
        where acr.role_id=aur.role_id and aur.user_id=acu.user_id and acu.user_id=#{userId}
    </select>

</mapper>